# first we'll do a thresholding based segmentation
# we'll first visualize the intensity histogram of the grayscale image
# plt.hist(blur_gray_image, 20)
# plt.title('histogram of blur gray intensities')
# plt.show()
# plt.close()

#let's try various thresholds
th=245
_, mask = cv2.threshold(blur_gray_image, th, 255, cv2.THRESH_BINARY)
plt.imshow(cv2.cvtColor(mask, cv2.COLOR_BGR2RGB))
plt.title(f'th = {th}')
plt.show()
plt.close()


# threshold on the normal gray image not blurred
th=245
_, mask = cv2.threshold(gray_image, th, 255, cv2.THRESH_BINARY)
plt.imshow(cv2.cvtColor(mask, cv2.COLOR_BGR2RGB))
plt.title(f'th = {th}')
plt.show()
plt.close()


# the above thing is better because there is no 'noise' in the image

#  Unlike thresholding, which uses intensity or color values to separate objects from the background, 
# region-based segmentation considers the relationships between pixels to group them into coherent regions.
# so we'll use region based segmentation and see what we get



